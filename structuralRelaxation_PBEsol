    # pending: program description

    from pymatgen.core import Structure 
    from pymatgen.io.quantumespresso import PWInput 
    from pymatgen.visualization import plotly_vis

    # loading the LK-99 CIF 

    structure = Structure.from_file("LK99.cif") 

    # generating QE input for PBEsol relaxation 

    input_pbesol = PWInput 
    
    ( structure, pseudopotentials = 
    
    { 
        "Pb": "Pb.pbesol-n-rrkjus_psl.1.0.0.UPF", 
        "Cu": "Cu.pbesol-n-rrkjus_psl.1.0.0.UPF", 
        "P": "P.pbesol-n-rrkjus_psl.1.0.0.UPF", 
        "O": "O.pbesol-n-rrkjus_psl.1.0.0.UPF", 
    }, 
    
    control = {"calculation": "relax", "tprnfor": True, "tstress": True}, 
    
    system = 
    
    { 
        "ecutwfc": 60, 
        "ecutrho": 480, 
        "input_dft": "PBEsol",  # setting PBEsol 
        "occupations": "smearing", 
        "smearing": "mv", 
        "degauss": 0.02, 
    }, 
    
    kpts = (4, 4, 4),) 
    
    input_pbesol.write_file("relax_pbesol.in") 

    # running Quantum ESPRESSO (where pw.x is in the PATH)
    
    !mpirun -np 4 pw.x -in relax_pbesol.in > relax_pbesol.out

    # verifying completion
    
    if "JOB COMPLETE" in open("relax_pbesol.out").read():
    
        print("Relaxation worked!")
    
    # link to download output
    
    display(FileLink("relax_pbesol.out"))

    else:

        print("Relaxation failed. Check relax_pbesol.out.")

    # visualizing strcture 
    
    plotly_vis.show_structure(final_structure)
